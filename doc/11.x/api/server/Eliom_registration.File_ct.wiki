=Module <<a_api_type subproject="server" | module Eliom_registration.File_ct >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|File_ct>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Eliom_registration.File_ct >><<span class="ocsforge_color_keyword"|end>>>>~Same as file but makes possible to specify the content type for
    each file~. ~The value returned by service handlers is a pair
    <<span class="odocwiki_inlinecode"|~(file~_name~, content~_type~)>>~.

----
<<pre id="VALcheck_file" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|check~_file>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|string <<span class="ocsforge_color_delimiter"| -> >> bool>>>><<div class="odocwiki_info"|~The function <<span class="odocwiki_inlinecode"|check~_file file>> is true if <<span class="odocwiki_inlinecode"|~File~.send file>> would
      effectively return the file ~(i~.e~. the file is present and
      readable~)
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|include>> <<a_api subproject="server" | module type Eliom_registration_sigs.S_with_create >>>>
