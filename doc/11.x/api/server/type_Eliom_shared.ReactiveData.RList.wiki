<<code language="ocaml" | sig
  type 'a t
  type 'a handle
  val create :
    ?default:('a FakeReactiveData.RList.t * 'a FakeReactiveData.RList.handle)
             option Eliom_client_value.t ->
    ?reset_default:bool -> 'a list -> 'a t * 'a handle
  val concat : 'a t -> 'a t -> 'a t
  val value : 'a t -> 'a list Value.t
  val signal : ?eq:('a -> 'a -> bool) Value.t -> 'a t -> 'a list React.S.t
  val singleton_s : 'a React.S.t -> 'a t
  val map : ('a -> 'b) Value.t -> 'a t -> 'b t
  val from_signal :
    ?eq:('a -> 'a -> bool) Value.t -> 'a list React.S.t -> 'a t
  val acc_e :
    ?init:'a t * 'a handle -> 'a React.E.t Eliom_client_value.t -> 'a t
  module Lwt :
    sig val map_p : ('a -> 'b Lwt.t) Value.t -> 'a t -> 'b t Lwt.t end
  val synced : 'a t -> bool
end >>