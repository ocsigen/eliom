=Module <<a_api_type subproject="server" | module Eliom_content.Xml >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Xml>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Eliom_content.Xml >><<span class="ocsforge_color_keyword"|end>>>>~Low~-level ~X~M~L manipulation~.

----


==@@id="2_Basefunctions"@@~Base functions==

      ~See <<a_api project="tyxml" | module Xml_sigs.Iterable >> ~.
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|include>> Xml_sigs.Iterable>>


==@@id="2_Uniquenodes"@@~Unique nodes ==


~Unique nodes are ~X~M~L nodes that are manipulated ~'by reference~'
      when sent to the client part of an ~Eliom~-application~: the
      created element is allocated only one time in each instance of
      an application~. ~See <<a_manual chapter="clientserver-html"
      fragment="unique" |the eliom manual>> for more
      details~.


==@@id="2_Eventhandlers"@@~Event handlers ==

<<pre class="ocsforge_color odocwiki_code" id="TYPEcaml_event_handler"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|caml~_event~_handler>>>><<div class="odocwiki_info"|~Values of type <<span class="odocwiki_inlinecode"|caml~_event~_handler>> represents event handler
      build with the <<span class="odocwiki_inlinecode"|~{~{ ~.~.~. ~}~}>> syntax ~(see the ~Eliom manual for more
      information on <<a_manual chapter="clientserver-html"
      fragment="syntax"|syntax extension>>~)~. ~Such values are
      expected by functions like <<span class="odocwiki_inlinecode"|~Eliom~_content~.~Html~.a~_onclick>>~.
>>
<<pre id="VALwrap" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|wrap>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|elt <<span class="ocsforge_color_delimiter"| -> >> 'a <<span class="ocsforge_color_delimiter"| -> >> 'a <<a_api subproject="server" text="Eliom_wrap.wrapped_value" | type Eliom_wrap.wrapped_value >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Eliom~_content~.~Xml~.wrap page v>> is like <<span class="odocwiki_inlinecode"|~Eliom~_wrap~.wrap v>> but
      it makes sure that all <<span class="odocwiki_inlinecode"|elt>>s in <<span class="odocwiki_inlinecode"|v>> which are included in
      <<span class="odocwiki_inlinecode"|page>> are sent with empty content~. ~This is safe because such
      elements will be taken from the ~D~O~M on the client either
      ways~.
>>
