=Module <<a_api_type subproject="server" | module Eliom_content.Html.Custom_data >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Custom_data>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Eliom_content.Html.Custom_data >><<span class="ocsforge_color_keyword"|end>>>>~Type~-safe custom data for ~H~T~M~L~.
      ~See the <<a_manual chapter="clientserver-html"
      fragment="custom_data"|examples in the manual>> ~.

----
<<pre class="ocsforge_color odocwiki_code" id="TYPEt"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_type"|'a>> <<span class="odocwiki_name"|t>>>><<div class="odocwiki_info"|~Custom data with values of type <<span class="odocwiki_inlinecode"|~'a>>~.
>>
<<pre id="VALcreate" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|create>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| name: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?default: >>'a <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| to_string: >><<span class="ocsforge_color_delimiter"| ( >>'a <<span class="ocsforge_color_delimiter"| -> >> string<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| of_string: >><<span class="ocsforge_color_delimiter"| ( >>string <<span class="ocsforge_color_delimiter"| -> >> 'a<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >> 'a <<a_api subproject="server" text="t" | type Eliom_content.Html.Custom_data.t >>>>>><<div class="odocwiki_info"|~Create a custom data field by providing string conversion functions~.
        ~If the <<span class="odocwiki_inlinecode"|default>> is provided~, calls to <<a_api project="eliom" subproject="client" |
        val Eliom_content.Html.Custom_data.get_dom>>  return that instead of throwing an
        exception <<span class="odocwiki_inlinecode"|~Not~_found>>~.
>>
<<pre id="VALcreate_json" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|create~_json>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| name: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?default: >>'a <<span class="ocsforge_color_delimiter"| -> >>\\  'a <<span class="ocsforge_color_uid"|Deriving_Json>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >> 'a <<a_api subproject="server" text="t" | type Eliom_content.Html.Custom_data.t >>>>>><<div class="odocwiki_info"|~Create a custom data from a ~Json~-deriving type~.
>>
<<pre id="VALattrib" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|attrib>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  'a <<a_api subproject="server" text="t" | type Eliom_content.Html.Custom_data.t >> <<span class="ocsforge_color_delimiter"| -> >>\\  'a <<span class="ocsforge_color_delimiter"| -> >> [> `User_data ] <<a_api subproject="server" text="Eliom_content.Html.attrib" | type Eliom_content.Html.attrib >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|attrib my~_data value >> creates a ~H~T~M~L attribute for the custom~-data
        type <<span class="odocwiki_inlinecode"|my~_data>> with value <<span class="odocwiki_inlinecode"|value>> for injecting it into an a ~H~T~M~L tree
        ~(<<a_api | type Eliom_content.Html.elt >> ~)~.
>>
