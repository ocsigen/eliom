=Module <<a_api_type subproject="client" | module Eliom_parameter >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Eliom_parameter>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="client" text=".." | module Eliom_parameter >><<span class="ocsforge_color_keyword"|end>>>>
----
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|include>> <<a_api subproject="client" | module type Eliom_parameter_sigs.S >>>>
<<pre id="VALuser_type" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|user~_type>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| of_string: >><<span class="ocsforge_color_delimiter"| ( >>string <<span class="ocsforge_color_delimiter"| -> >> 'a<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| to_string: >><<span class="ocsforge_color_delimiter"| ( >>'a <<span class="ocsforge_color_delimiter"| -> >> string<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'a, [ `WithoutSuffix ], [ `One of 'a ] param_name<<span class="ocsforge_color_delimiter"| ) >> params_type>>>><<div class="odocwiki_info"|~Specifying parameter as <<span class="odocwiki_inlinecode"|user~_type ~~of~_string ~~to~_string s>> tells
    that the service take a parameter~, labeled <<span class="odocwiki_inlinecode"|s>>~, and that the
    server will have to use <<span class="odocwiki_inlinecode"|of~_string>> and <<span class="odocwiki_inlinecode"|to~_string>> to make the
    conversion between the ~O~Caml representation of the parameter and
    it~'s external representation as a string~. ~It allows one to use
    whatever type you want for a parameter of the service~.
>>
<<pre id="VALall_suffix_user" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|all~_suffix~_user>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| of_string: >><<span class="ocsforge_color_delimiter"| ( >>string <<span class="ocsforge_color_delimiter"| -> >> 'a<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| to_string: >><<span class="ocsforge_color_delimiter"| ( >>'a <<span class="ocsforge_color_delimiter"| -> >> string<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  string <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_delimiter"| ( >>'a, [ `Endsuffix ], [ `One of 'a ] param_name<<span class="ocsforge_color_delimiter"| ) >> params_type>>>><<div class="odocwiki_info"|~Takes the whole suffix~, as long as possible~, with a type specified
    by the user~.
>>
<<pre id="VALreconstruct_params_form" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|reconstruct~_params~_form>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_delimiter"| ( >>string * <<span class="ocsforge_color_uid"|Js_of_ocaml>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Form>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|form_elt>><<span class="ocsforge_color_delimiter"| ) >> list <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'a, [< suff ], 'b<<span class="ocsforge_color_delimiter"| ) >> params_type <<span class="ocsforge_color_delimiter"| -> >> 'a option>>>><<pre id="VALget_non_localized_get_parameters" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|get~_non~_localized~_get~_parameters>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_delimiter"| ( >>'a, [ `WithoutSuffix ], 'b<<span class="ocsforge_color_delimiter"| ) >> non_localized_params <<span class="ocsforge_color_delimiter"| -> >> 'a option>>>>