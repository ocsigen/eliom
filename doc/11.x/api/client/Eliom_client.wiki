=Module <<a_api_type subproject="client" | module Eliom_client >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Eliom_client>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="client" text=".." | module Eliom_client >><<span class="ocsforge_color_keyword"|end>>>>~Call server side services and change the current page~.

----
<<pre id="VALlock_request_handling" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|lock~_request~_handling>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|unit <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<pre id="VALunlock_request_handling" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|unlock~_request~_handling>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|unit <<span class="ocsforge_color_delimiter"| -> >> unit>>>>

==@@id="2_Mobileapplications"@@~Mobile applications==

<<pre id="VALinit_client_app" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|init~_client~_app>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| app_name: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?ssl: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| hostname: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?port: >>int <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_label"| site_dir: >><<span class="ocsforge_color_uid"|Eliom_lib>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Url>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|path>> <<span class="ocsforge_color_delimiter"| -> >> unit <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|~Call this function if you want to be able to run your client side
    app before doing the first request~, that is~, when the client side
    app is not sent by the server~. ~This may be the case for example if
    you are developing a mobile app~. ~The parameters correspond to the
    base ~U~R~L of the server side of your application~.


    ~Alternatively~, and to make sure it is done early enough~, define
    ~J~S variables called <<span class="odocwiki_inlinecode"|~_~_eliom~_server>> and <<span class="odocwiki_inlinecode"|~_~_eliom~_app~_name>>
    at the beginning of your html
    file~, containing the full ~U~R~L of your server and ~Eliom app name~.


    <<span class="odocwiki_inlinecode"|site~_dir>> ~(if given~) specifies the path that the application runs
    under~. ~It should correspond to the ~<site~> tag of your server
    configuration~. ~Calls to server functions use this path~.
>>
<<pre id="VALis_client_app" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|is~_client~_app>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|unit <<span class="ocsforge_color_delimiter"| -> >> bool>>>><<div class="odocwiki_info"|~Returns whether the application is sent by a server or started on
    client side~. ~If called on server side~, always returns <<span class="odocwiki_inlinecode"|false>>~.
    ~Otherwise~, it tests the presence of ~J~S variables added automatically by
    ~Eliom when the page is sent by a server~.
    ~Example~:
    
<<code language='ocaml'| if not (Eliom_client.is_client_app ())
 then Eliom_client.init_client_app ... >>

>>


==@@id="2_Callingservices"@@~Calling services==

<<pre id="VALchange_page" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|change~_page>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?ignore_client_fun: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?replace: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?window_name: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?window_features: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?absolute: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?absolute_path: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| service: >><<span class="ocsforge_color_delimiter"| ( >>'a, 'b, 'c, 'd, 'e, 'f, 'g,\\           [< `WithSuffix | `WithoutSuffix ], 'h, 'i,\\           <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|non_ocaml>><<span class="ocsforge_color_delimiter"| ) >>\\          <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?hostname: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?port: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?fragment: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?nl_params: >><<span class="ocsforge_color_uid"|Eliom_parameter>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|nl_params_set>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_get_na_params: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?progress: >><<span class="ocsforge_color_delimiter"| ( >>int <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> unit<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?upload_progress: >><<span class="ocsforge_color_delimiter"| ( >>int <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> unit<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?override_mime_type: >>string <<span class="ocsforge_color_delimiter"| -> >> 'a <<span class="ocsforge_color_delimiter"| -> >> 'b <<span class="ocsforge_color_delimiter"| -> >> unit <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>>>><<div class="odocwiki_info"|~Call a service and change the current page~.  ~If the service
    belongs to the same application~, the client side program is not
    stopped~, and only the content ~(not the container~) is reloaded~.  ~If
    the <<span class="odocwiki_inlinecode"|replace>> flag is set~, the new page will replace the current
    page in the browser history if the service belongs to the same
    application~. ~The last two parameters are respectively the ~G~E~T and
    ~P~O~S~T parameters to send to the service~.
    ~If <<span class="odocwiki_inlinecode"|window~_name>> is provided and not "~_self" ~(for example <<span class="odocwiki_inlinecode"|"~_blank">>~)~,
    will behave as <<span class="odocwiki_inlinecode"|exit~_to>>~.
>>
<<pre id="VALcall_ocaml_service" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|call~_ocaml~_service>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?absolute: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?absolute_path: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| service: >><<span class="ocsforge_color_delimiter"| ( >>'a, 'b, 'c, 'd, 'e, 'f, 'g,\\           [< `WithSuffix | `WithoutSuffix ], 'h, 'i,\\           'return <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|ocaml>><<span class="ocsforge_color_delimiter"| ) >>\\          <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?hostname: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?port: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?fragment: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?nl_params: >><<span class="ocsforge_color_uid"|Eliom_parameter>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|nl_params_set>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_get_na_params: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?progress: >><<span class="ocsforge_color_delimiter"| ( >>int <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> unit<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?upload_progress: >><<span class="ocsforge_color_delimiter"| ( >>int <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> unit<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?override_mime_type: >>string <<span class="ocsforge_color_delimiter"| -> >> 'a <<span class="ocsforge_color_delimiter"| -> >> 'b <<span class="ocsforge_color_delimiter"| -> >> 'return <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>>>><<div class="odocwiki_info"|~Call a server side service that return an ~O~Caml value~.


    ~If the service raises an exception~, the call to the
    <<span class="odocwiki_inlinecode"|call~_ocaml~_service>> raises an exception <<a_api|exception
    Exception_on_server>>  whose argument describes the server~-side
    exception~.
    ~(~N~B that we cannot send the original exception as~-it~, because
    ~O~Caml permits the marshalling of exceptions ~.~.~.~)
>>
<<pre id="VALexit_to" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|exit~_to>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?window_name: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?window_features: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?absolute: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?absolute_path: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| service: >><<span class="ocsforge_color_delimiter"| ( >>'a, 'b, 'c, 'd, 'e, 'f, 'g,\\           [< `WithSuffix | `WithoutSuffix ], 'h, 'i,\\           <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|non_ocaml>><<span class="ocsforge_color_delimiter"| ) >>\\          <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?hostname: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?port: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?fragment: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?nl_params: >><<span class="ocsforge_color_uid"|Eliom_parameter>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|nl_params_set>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_get_na_params: >>bool <<span class="ocsforge_color_delimiter"| -> >> 'a <<span class="ocsforge_color_delimiter"| -> >> 'b <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|~Stop current program and load a new page~.  ~Note that for string arguments~,
    sole line feed or sole carriage return characters are substituted by the
    string <<span class="odocwiki_inlinecode"|"~\r~\n">>~.
    ~If <<span class="odocwiki_inlinecode"|window~_name>> is specified ~(for example <<span class="odocwiki_inlinecode"|"~_blank">>~)~, open in new window
    by calling ~Javascript function <<span class="odocwiki_inlinecode"|window~.open>>~.
    ~In that case~, you can add <<span class="odocwiki_inlinecode"|window~_features>> parameter
    ~(as in ~Javascript function <<span class="odocwiki_inlinecode"|window~.open>>~)~.
    ~Warning~: opening in other window may not work on mobile apps
    if <<span class="odocwiki_inlinecode"|window~.open>> is not implemented~.
>>
<<pre id="VALwindow_open" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|window~_open>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| window_name: >><<span class="ocsforge_color_uid"|Js_of_ocaml>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|js_string>> <<span class="ocsforge_color_uid"|Js_of_ocaml>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?window_features: >><<span class="ocsforge_color_uid"|Js_of_ocaml>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|js_string>> <<span class="ocsforge_color_uid"|Js_of_ocaml>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?absolute: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?absolute_path: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| service: >><<span class="ocsforge_color_delimiter"| ( >>'a, unit, <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|get>>, 'b, 'c, 'd, 'e,\\           [< `WithSuffix | `WithoutSuffix ], 'f, unit, 'g<<span class="ocsforge_color_delimiter"| ) >>\\          <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?hostname: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?port: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?fragment: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?nl_params: >><<span class="ocsforge_color_uid"|Eliom_parameter>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|nl_params_set>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_get_na_params: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  'a <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_uid"|Js_of_ocaml>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Dom_html>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|window>> <<span class="ocsforge_color_uid"|Js_of_ocaml>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_uid"|Js_of_ocaml>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|opt>>>>>><<div class="odocwiki_info"|~Loads an ~Eliom service in a window ~(cf~. ~Javascript~'s <<span class="odocwiki_inlinecode"|window~.open>>~)~.
>>
<<pre id="VALchange_url" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|change~_url>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?replace: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?absolute: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?absolute_path: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| service: >><<span class="ocsforge_color_delimiter"| ( >>'get, unit, <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|get>>, 'a, 'b, 'c, 'd,\\           [< `WithSuffix | `WithoutSuffix ], 'e, unit, 'f<<span class="ocsforge_color_delimiter"| ) >>\\          <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?hostname: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?port: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?fragment: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?nl_params: >><<span class="ocsforge_color_uid"|Eliom_parameter>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|nl_params_set>> <<span class="ocsforge_color_delimiter"| -> >> 'get <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|~Changes the ~U~R~L~, without doing a request~.
    ~It takes a ~G~E~T ~(co~-~)service as parameter and its parameters~.
    ~If the <<span class="odocwiki_inlinecode"|replace>> flag is set~, the current page is not saved
    in the history~.
>>
<<pre id="VALcall_service" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|call~_service>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?absolute: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?absolute_path: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| service: >><<span class="ocsforge_color_delimiter"| ( >>'a, 'b, 'c, 'd, 'e, 'f, 'g,\\           [< `WithSuffix | `WithoutSuffix ], 'h, 'i, 'j<<span class="ocsforge_color_delimiter"| ) >>\\          <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?hostname: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?port: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?fragment: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?nl_params: >><<span class="ocsforge_color_uid"|Eliom_parameter>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|nl_params_set>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_get_na_params: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?progress: >><<span class="ocsforge_color_delimiter"| ( >>int <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> unit<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?upload_progress: >><<span class="ocsforge_color_delimiter"| ( >>int <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> unit<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?override_mime_type: >>string <<span class="ocsforge_color_delimiter"| -> >> 'a <<span class="ocsforge_color_delimiter"| -> >> 'b <<span class="ocsforge_color_delimiter"| -> >> string <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>>>><<div class="odocwiki_info"|~(low level~) ~Call a server side service and return the content
    of the resulting ~H~T~T~P frame as a string~.
>>


==@@id="2_Misc"@@~Misc==

<<pre id="VALonload" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|onload>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_delimiter"| ( >>unit <<span class="ocsforge_color_delimiter"| -> >> unit<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|~Registers some code to be executed after loading the client
    application~, or after changing the page the next time~.


    ~It complements as a toplevel expression in the client
    module with the side effect from client values while
    creating the response of a service~: ~While the latter are executed
    each time the service has been called~; the former is executed only
    once~; but each at a time where the document is in place~:


    ~Beware of using <<span class="odocwiki_inlinecode"|onload>> when using the ~D~O~M caching functionality~,
    i~.e~. <<span class="odocwiki_inlinecode"|push~_history~_dom>>~. ~When switching to a cached page ~(e~.g~. by going
    back~) the onload event is not triggered ~(as the page is not loaded~)~. ~To
    avoid this problem rely on <<span class="odocwiki_inlinecode"|~Page~_status~.onactive>> which is triggered for
    freshly generated pages as well as pages served from the ~D~O~M cache~.


    <<code language="ocaml"|
    [%%shared open Eliom_lib]
    [%%client
      let () = alert "Once only during initialization of the client, \
                      i.e. before the document is available."
      let () =
        Eliom_client.onload
          (fun () -> alert "Once only when the document is put in place.")
    ]
    [%%server
      let _ = My_app.register_service ~path ~get_params
        (fun () () ->
           ignore {unit{
             alert "Each time this service is called and the sent document \
                    is put in place."
           }};
           Lwt.return html
    ]
    >> 
>>
<<pre id="VALlwt_onload" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|lwt~_onload>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|unit <<span class="ocsforge_color_delimiter"| -> >> unit <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>>>><<div class="odocwiki_info"|~Returns a ~Lwt thread that waits until the next page is loaded~.
>>
<<pre class="ocsforge_color odocwiki_code" id="TYPEchangepage_event"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|changepage~_event>> <<span class="ocsforge_color_delimiter"|~=>> <<span class="ocsforge_color_delimiter"|~{>>
<<span class="odocwiki_record"|<<span class="odocwiki_field"|<<span class="odocwiki_field_descr"|  <<span class="ocsforge_color_label"|in_cache:>> <<span class="odocwiki_type"|bool>><<span class="ocsforge_color_delimiter"|~;>> >>>><<span class="odocwiki_field"|<<span class="odocwiki_field_descr"|  <<span class="ocsforge_color_label"|origin_uri:>> <<span class="odocwiki_type"|string>><<span class="ocsforge_color_delimiter"|~;>> >>>><<span class="odocwiki_field"|<<span class="odocwiki_field_descr"|  <<span class="ocsforge_color_label"|target_uri:>> <<span class="odocwiki_type"|string>><<span class="ocsforge_color_delimiter"|~;>> >>>><<span class="odocwiki_field"|<<span class="odocwiki_field_descr"|  <<span class="ocsforge_color_label"|origin_id:>> <<span class="odocwiki_type"|int>><<span class="ocsforge_color_delimiter"|~;>> >>>><<span class="odocwiki_field"|<<span class="odocwiki_field_descr"|  <<span class="ocsforge_color_label"|target_id:>> <<span class="odocwiki_type"|int option>><<span class="ocsforge_color_delimiter"|~;>> >>>>>><<span class="ocsforge_color_delimiter"|~}>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|changepage~_event>> is a record of some parameters related to
    page changes~. <<span class="odocwiki_inlinecode"|in~_cache>> is true if the dom of the page is cached by
    <<span class="odocwiki_inlinecode"|push~_history~_dom>>~.
    <<span class="odocwiki_inlinecode"|origin~_uri>> is the uri of the current page and <<span class="odocwiki_inlinecode"|target~_uri>>
    is the uri of the next page~. <<span class="odocwiki_inlinecode"|origin~_id>> is the state~_id of
    the current page and <<span class="odocwiki_inlinecode"|target~_id>> is the state~_id of the next page~.
    <<span class="odocwiki_inlinecode"|target~_id>> is not <<span class="odocwiki_inlinecode"|~None>> if and only if the onchangepage event
    takes place during a navigation in history~.
>>
<<pre id="VALonchangepage" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|onchangepage>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_delimiter"| ( >><<a_api subproject="client" text="changepage_event" | type Eliom_client.changepage_event >> <<span class="ocsforge_color_delimiter"| -> >> unit <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|~Run some code ~*before~* the next page change~, that is~, before each
    call to a page~-producing service handler~.
    ~Just like onpreload~, handlers registered with onchangepage only
    apply to the next page change~.
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="client" text="Page_status" | module Eliom_client.Page_status >> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="client" text=".." | module Eliom_client.Page_status >><<span class="ocsforge_color_keyword"|end>>>><<pre id="VALonbeforeunload" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|onbeforeunload>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_delimiter"| ( >>unit <<span class="ocsforge_color_delimiter"| -> >> string option<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|onbeforeunload f>> registers <<span class="odocwiki_inlinecode"|f>> as a handler to be called before
    changing the page the next time~. ~If <<span class="odocwiki_inlinecode"|f>> returns <<span class="odocwiki_inlinecode"|~Some s>>~, then we
    ask the user to confirm quitting~. ~We try to use <<span class="odocwiki_inlinecode"|s>> in the
    confirmation pop~-up~. <<span class="odocwiki_inlinecode"|~None>> means no confirmation needed~.


    ~The callback <<span class="odocwiki_inlinecode"|f>> is sometimes triggered by internal service calls~,
    and sometimes by the browser <<span class="odocwiki_inlinecode"|onbeforeunload>> event~. ~In the
    <<span class="odocwiki_inlinecode"|onbeforeunload>> case~, the confirmation pop~-up is managed by the
    browser~. ~For ~Firefox~, the string <<span class="odocwiki_inlinecode"|s>> returned by <<span class="odocwiki_inlinecode"|f>> is ignored~:
    https~:~/~/bugzilla~.mozilla~.org~/show~_bug~.cgi~?id~=~6~4~1~5~0~9


    <<span class="odocwiki_inlinecode"|onbeforeunload>> can be used to register multiple callbacks~.
>>
<<pre id="VALonunload" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|onunload>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_delimiter"| ( >>unit <<span class="ocsforge_color_delimiter"| -> >> unit<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|onunload f>> registers <<span class="odocwiki_inlinecode"|f>> as a handler to be called before page
    change~. ~The callback <<span class="odocwiki_inlinecode"|f>> is sometimes triggered by internal
    service calls~, and sometimes by the browser <<span class="odocwiki_inlinecode"|onunload>> event~.
    <<span class="odocwiki_inlinecode"|onunload>> can be used to register multiple callbacks~.
>>
<<pre id="VALwait_load_end" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|wait~_load~_end>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|unit <<span class="ocsforge_color_delimiter"| -> >> unit <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>>>><<div class="odocwiki_info"|~Wait for the initialization phase to terminate
>>
<<pre id="VALget_application_name" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|get~_application~_name>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|unit <<span class="ocsforge_color_delimiter"| -> >> string>>>><<div class="odocwiki_info"|~Returns the name of currently running ~Eliom application~,
    defined while applying <<span class="odocwiki_inlinecode"|~Eliom~_registration~.~App>> functor~.
>>
<<pre id="VALpersist_document_head" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|persist~_document~_head>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|unit <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|~After this function is called~, the document head is no
    longer changed on page change~.
>>


==@@id="2_RPCServerfunctions"@@~R~P~C ~/ ~Server functions==



    ~See the <<a_manual chapter="clientserver-communication" fragment="rpc"|manual>> ~.
<<pre class="ocsforge_color odocwiki_code" id="TYPEserver_function"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_type"|<<span class="ocsforge_color_delimiter"| ( >>'a, 'b<<span class="ocsforge_color_delimiter"| ) >>>> <<span class="odocwiki_name"|server~_function>> <<span class="ocsforge_color_delimiter"|~=>> <<span class="odocwiki_type"|'a <<span class="ocsforge_color_delimiter"| -> >> 'b <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>> >><<div class="odocwiki_info"|~A <<span class="odocwiki_inlinecode"|~(~'a~, ~'b~) server~_function>> provides transparently access to a
    server side function which has been created by <<a_api
    subproject="server"| val Eliom_client.server_function>> ~.


    ~See also <<a_api subproject="server" text="the opaque server
    side representation"| type Eliom_client.server_function>> ~.


    ~The handling of exception on the server corresponds to that of
    ~<~<a~_api subproject~="client"~|val ~Eliom~_client~.call~_ocaml~_service~>~>~.
>>
<<pre id="VALchange_page_uri" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|change~_page~_uri>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_label"| ?replace: >>bool <<span class="ocsforge_color_delimiter"| -> >> string <<span class="ocsforge_color_delimiter"| -> >> unit <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|change~_page~_uri ~?replace uri>> identifies and calls the
    client~-side service that implements <<span class="odocwiki_inlinecode"|uri>>~.


    ~We fallback to a server service call if the service is not
    registered on the client~.


    ~If the <<span class="odocwiki_inlinecode"|replace>> flag is set to <<span class="odocwiki_inlinecode"|true>>~, the current page is not
    saved in the history~.
>>
<<pre id="VALset_client_html_file" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|set~_client~_html~_file>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|string <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|~Set the name of the ~H~T~M~L file loading our client app~. ~The default
    is "eliom~.html"~. ~A wrong value will not allow the app to
    initialize itself correctly~.
>>
