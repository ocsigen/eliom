=Functor <<a_api_type | module Ocamlbuild_eliom.Make >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Make>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_sig_block"|<<span class="ocsforge_color_keyword"|functor>> <<span class="ocsforge_color_delimiter"|(>>* <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<span class="odocwiki_sig_block"|>><<span class="ocsforge_color_keyword"|end>><<span class="ocsforge_color_delimiter"|)>> <<span class="ocsforge_color_delimiter"|-~>>> \\  <<span class="ocsforge_color_keyword"|sig>><<a_api text=".." | module Ocamlbuild_eliom.Make >><<span class="ocsforge_color_keyword"|end>>>>>><<div class="odocwiki_module_param_list" | <<span class="odocwiki_param_title" |Parameters :>><<div|
|@@class="odocwiki_paramstable"@ @class="centertop fifteen code"@@{{{*}}}|@@class="centertop"@@:|<<span class="odocwiki_type"|Ocamlbuild_eliom.ELIOM>>|
>>>>

----
<<pre id="VALdispatcher" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|dispatcher>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?oasis_executables: >><<span class="ocsforge_color_uid"|Ocamlbuild_plugin>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Pathname>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> list <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_uid"|Ocamlbuild_plugin>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|hook>> <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|~The main dispatcher


      ~It calls <<span class="odocwiki_inlinecode"|~Ocamlbuild~_js~_of~_ocaml~.dispatcher>> first~, with the same
      parameters~, and then initialize the plugin for eliom~.


      ~The dispatcher should be used with <<span class="odocwiki_inlinecode"|~Ocamlbuild~_plugin~.dispatch>> as~:
      <<span class="odocwiki_inlinecode"|~Ocamlbuild~_plugin~.dispatch ~Ocamlbuild~_eliom~.dispatcher>>
      or if you use oasis it would look like~:
      <<span class="odocwiki_inlinecode"|~Ocamlbuild~_plugin~.dispatch
         ~(fun hook ~-~>
           dispatch~_default hook~;
           ~Ocamlbuild~_js~_of~_ocaml~.dispatcher
             ~~oasis~_executables~:~["src~/yourprogram~.byte"~]
             hook~;
         ~)
      >>


      <<span class="odocwiki_inlinecode"|~?oasis~_executables>> is the paths of the executables
      ~(having the ~.byte extension~) you want to compile
      as a javascript executable~. ~The former executables are still compiled~.


      ~Side note~: <<span class="odocwiki_inlinecode"|~Ocamlbuild~_plugin~.dispatch>> should be used only once as
      it record only one function for an ocamlbuild module~.
>>
