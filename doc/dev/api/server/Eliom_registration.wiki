=Module <<a_api_type subproject="server" | module Eliom_registration >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Eliom_registration>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Eliom_registration >><<span class="ocsforge_color_keyword"|end>>>>~Eliom services registration for various kinds of page content~:
    ~Eliom application~, valid <<a_api subproject="server" | module Eliom_registration.Html >>~, actions~, redirections~, static
    files~, ~.~.~.


    **~Please read the ~Eliom manual before this page to learn how to
    use <<a_manual chapter="server-services" | services >> and     <<a_manual chapter="server-outputs" | predefined outputs >>~.
    **


    <<outline| <<header| **Table of contents** >> >> 


    
==@@id="2_Typedefinitions"@@~Type definitions==


----
<<pre class="ocsforge_color odocwiki_code" id="TYPEkind"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_type"|'a>> <<span class="odocwiki_name"|kind>>>><<div class="odocwiki_info"|~The type <<span class="odocwiki_inlinecode"|kind>> is an abstract type for the ~H~T~T~P frame returned by
    a service~. ~The type parameter indicates the content type~, and is
    one of the following types~:
    
* <<a_api subproject="server" | type Eliom_registration.application_content >>
* <<a_api subproject="server" | type Eliom_registration.browser_content >>
* <<a_api subproject="server" | type Eliom_registration.block_content >>
* <<a_api subproject="server" | type Eliom_registration.unknown_content >>
* <<a_api subproject="server" | type Eliom_registration.ocaml_content >>

>>


===@@id="3_ReturntypesforEliomserviceservice"@@~Return types for <<span class="odocwiki_inlinecode"|~Eliom~_service~.service>> ===



    
====@@id="4_Classicalcontent"@@~Classical content====

<<pre class="ocsforge_color odocwiki_code" id="TYPEbrowser_content"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|browser~_content>> <<span class="ocsforge_color_delimiter"|~=>> <<span class="odocwiki_type"|[ `Browser ]>> >><<div class="odocwiki_info"|~The type <<span class="odocwiki_inlinecode"|browser~_content>> is to be used as a phantom type
    parameter for <<a_api subproject="server" | type Eliom_registration.kind >>~. ~It means the returned
    content must be interpreted in the browser as stated by the
    content~-type header~. ~This is most common return type for an eliom
    service~, see for example <<a_api subproject="server" | module Eliom_registration.Html >>~, <<a_api subproject="server" | module Eliom_registration.CssText >>~, <<a_api subproject="server" | module Eliom_registration.File >>~,
    <<a_api subproject="server" | module Eliom_registration.Redirection >>~.
>>
<<pre class="ocsforge_color odocwiki_code" id="TYPEblock_content"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|block~_content>>>><<div class="odocwiki_info"|~The type <<span class="odocwiki_inlinecode"|block~_content>> is to be used as a phantom type parameter
    for <<a_api subproject="server" | type Eliom_registration.kind >>~. ~It means the returned content is a
    subtree of an ~X~M~L value~. ~See for example <<span class="odocwiki_inlinecode"|~Block~5>> or
    <<span class="odocwiki_inlinecode"|~Make~_typed~_xml~_registration>>~.
>>
<<pre class="ocsforge_color odocwiki_code" id="TYPEunknown_content"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|unknown~_content>>>><<div class="odocwiki_info"|~The type <<span class="odocwiki_inlinecode"|unknown~_content>> is to be used as a phantom type
    parameter for <<a_api subproject="server" | type Eliom_registration.kind >> when the content~-type
    can~'t be determined statically~. ~See <<span class="odocwiki_inlinecode"|~Text>> or <<a_api subproject="server" | module Eliom_registration.Any >>~.
>>


====@@id="4_Applicationcontent"@@~Application content====

<<pre class="ocsforge_color odocwiki_code" id="TYPEapplication_content"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_type"|'a>> <<span class="odocwiki_name"|application~_content>> <<span class="ocsforge_color_delimiter"|~=>> <<span class="odocwiki_type"|[ `Appl of 'a ]>> >><<div class="odocwiki_info"|~The type <<span class="odocwiki_inlinecode"|application~_content>> is a refinement of <<span class="odocwiki_inlinecode"|appl~_service>>
    to be used as a phantom type parameters for
    <<a_api subproject="server" | type Eliom_registration.kind >>~. ~The parameter <<span class="odocwiki_inlinecode"|~'a>> is phantom type
    that is unique for a given application~.
>>
<<pre class="ocsforge_color odocwiki_code" id="TYPEapplication_name"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_type"|'a>> <<span class="odocwiki_name"|application~_name>>>><<div class="odocwiki_info"|~Typed application name
>>


====@@id="4_OCamlcontent"@@~O~Caml content====

<<pre class="ocsforge_color odocwiki_code" id="TYPEocaml_content"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_type"|'a>> <<span class="odocwiki_name"|ocaml~_content>>>><<div class="odocwiki_info"|~The type <<span class="odocwiki_inlinecode"|ocaml~_content>> is an synomyn for
    <<span class="odocwiki_inlinecode"|~Eliom~_service~.ocaml~_service>> to be used as a phantom type
    parameters for <<a_api subproject="server" | type Eliom_registration.kind >>~. ~See <<a_api subproject="server" | module Eliom_registration.Ocaml >>~.
>>


==@@id="2_UsingHTMLwithservices"@@~Using ~H~T~M~L with services ==

<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="Html" | module Eliom_registration.Html >> <<span class="ocsforge_color_delimiter"|~:>> \\  <<span class="odocwiki_type"|<<a_api subproject="server" text="Eliom_registration_sigs.S_with_create" | module Eliom_registration_sigs.S_with_create >>>><<span class="odocwiki_type"| \\  with type page = Html_types.html <<a_api subproject="server" text="Eliom_content.Html" | module Eliom_content.Html >>.elt\\   and type options = unit\\   and type return = Eliom_service.non_ocaml\\   and type result = browser_content kind>>>><<div class="odocwiki_info"|~Eliom service registration for services that return ~H~T~M~L
    pages~.
>>


==@@id="2_Eliomclientserverapplications"@@~Eliom client~/server applications==

<<pre class="ocsforge_color odocwiki_code" id="TYPEappl_service_options"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|appl~_service~_options>> <<span class="ocsforge_color_delimiter"|~=>> <<span class="ocsforge_color_delimiter"|~{>>
<<span class="odocwiki_record"|<<span class="odocwiki_field"|<<span class="odocwiki_field_descr"|  <<span class="ocsforge_color_label"|do_not_launch:>> <<span class="odocwiki_type"|bool>><<span class="ocsforge_color_delimiter"|~;>> >>>>>><<span class="ocsforge_color_delimiter"|~}>>>><<div class="odocwiki_info"|~Type for the options of an ~Eliom application service~.


    ~If you set <<span class="odocwiki_inlinecode"|do~_not~_launch>> to <<span class="odocwiki_inlinecode"|true>> when creating an application
    service~, it will send the page without launching the client side
    program~. ~However~, if the program is already lanched~, the client
    side process won~'t be stopped~. ~Use this if some of your pages are
    not using the client side program and you want to make them load
    faster~.
>>
<<pre id="VALdefault_appl_service_options" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|default~_appl~_service~_options>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api subproject="server" text="appl_service_options" | type Eliom_registration.appl_service_options >>>>>><<div class="odocwiki_info"|~The default options record for an eliom service~. ~See
    <<a_api subproject="server" | type Eliom_registration.appl_service_options >>~.
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module type>> <<a_api subproject="server" text="APP" | module type Eliom_registration.APP >> <<span class="ocsforge_color_delimiter"|~=>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module type Eliom_registration.APP >><<span class="ocsforge_color_keyword"|end>>>><<pre id="VALtransform_global_app_uri" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|transform~_global~_app~_uri>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_delimiter"| ( >><<a_api subproject="server" text="Eliom_content.Html.uri" | type Eliom_content.Html.uri >> <<span class="ocsforge_color_delimiter"| -> >> <<a_api subproject="server" text="Eliom_content.Html.uri" | type Eliom_content.Html.uri >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_uid"|Stdlib>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|ref>>>>>><<div class="odocwiki_info"|~Function to modify the global~_app ~U~R~I for some obscure reason
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="App" | module Eliom_registration.App >> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_sig_block"|<<span class="ocsforge_color_keyword"|functor>> <<span class="ocsforge_color_delimiter"|(>>* <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<span class="odocwiki_sig_block"|>><<span class="ocsforge_color_keyword"|end>><<span class="ocsforge_color_delimiter"|)>> <<span class="ocsforge_color_delimiter"|-~>>> \\  <<span class="odocwiki_type"|<<a_api subproject="server" text="APP" | module Eliom_registration.APP >>>><<span class="odocwiki_type"| >>>>>><<div class="odocwiki_info"|~Functor for application creation~.
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module type>> <<a_api subproject="server" text="TMPL_PARAMS" | module type Eliom_registration.TMPL_PARAMS >> <<span class="ocsforge_color_delimiter"|~=>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module type Eliom_registration.TMPL_PARAMS >><<span class="ocsforge_color_keyword"|end>>>><<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="Eliom_tmpl" | module Eliom_registration.Eliom_tmpl >> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_sig_block"|<<span class="ocsforge_color_keyword"|functor>> <<span class="ocsforge_color_delimiter"|(>>App <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api subproject="server" text="APP" | module Eliom_registration.APP >>>><<span class="ocsforge_color_delimiter"|)>> <<span class="ocsforge_color_delimiter"|-~>>> \\  <<span class="odocwiki_sig_block"|<<span class="ocsforge_color_keyword"|functor>> <<span class="ocsforge_color_delimiter"|(>>Tmpl_param <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api subproject="server" text="TMPL_PARAMS" | module Eliom_registration.TMPL_PARAMS >>>><<span class="ocsforge_color_delimiter"|)>> <<span class="ocsforge_color_delimiter"|-~>>> \\  \\  <<span class="odocwiki_type"|<<a_api subproject="server" text="Eliom_registration_sigs.S_with_create" | module Eliom_registration_sigs.S_with_create >>>><<span class="odocwiki_type"| \\  with type page = Tmpl_param.t\\   and type options = appl_service_options\\   and type return = Eliom_service.non_ocaml\\   and type result = App.app_id application_content kind>>>>>>>>

===@@id="3_ServicesreturningHTMLorotherTyXMLfragments"@@~Services returning ~H~T~M~L ~(or other ~Ty~X~M~L~) fragments===

<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="Flow5" | module Eliom_registration.Flow5 >> <<span class="ocsforge_color_delimiter"|~:>> \\  <<span class="odocwiki_type"|<<a_api subproject="server" text="Eliom_registration_sigs.S_with_create" | module Eliom_registration_sigs.S_with_create >>>><<span class="odocwiki_type"| \\  with type page = Html_types.flow5 <<a_api subproject="server" text="Eliom_content.Html" | module Eliom_content.Html >>.elt list\\   and type options = unit\\   and type return = Eliom_service.non_ocaml\\   and type result = block_content kind>>>><<div class="odocwiki_info"|~Eliom service registration and forms creation for fragment of ~H~T~M~L
    page~.
>>


==@@id="2_Untypedpages"@@~Untyped pages==

<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="Html_text" | module Eliom_registration.Html_text >> <<span class="ocsforge_color_delimiter"|~:>> \\  <<span class="odocwiki_type"|<<a_api subproject="server" text="Eliom_registration_sigs.S_with_create" | module Eliom_registration_sigs.S_with_create >>>><<span class="odocwiki_type"| \\  with type page = string\\   and type options = unit\\   and type return = Eliom_service.non_ocaml\\   and type result = browser_content kind>>>><<div class="odocwiki_info"|~Eliom service registration and forms creation for untyped ~H~T~M~L
    page~.
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="CssText" | module Eliom_registration.CssText >> <<span class="ocsforge_color_delimiter"|~:>> \\  <<span class="odocwiki_type"|<<a_api subproject="server" text="Eliom_registration_sigs.S_with_create" | module Eliom_registration_sigs.S_with_create >>>><<span class="odocwiki_type"| \\  with type page = string\\   and type options = int\\   and type return = Eliom_service.non_ocaml\\   and type result = browser_content kind>>>><<div class="odocwiki_info"|~Eliom service registration for services that returns ~C~S~S~.
>>


==@@id="2_Otherkindsofservices"@@~Other kinds of services==

<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="Action" | module Eliom_registration.Action >> <<span class="ocsforge_color_delimiter"|~:>> \\  <<span class="odocwiki_type"|<<a_api subproject="server" text="Eliom_registration_sigs.S_with_create" | module Eliom_registration_sigs.S_with_create >>>><<span class="odocwiki_type"| \\  with type return = Eliom_service.non_ocaml\\   and type page = unit\\   and type options = [`Reload | `NoReload]\\   and type result = browser_content kind>>>><<div class="odocwiki_info"|~Eliom service registration for services that only execute
    actions~.
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="Unit" | module Eliom_registration.Unit >> <<span class="ocsforge_color_delimiter"|~:>> \\  <<span class="odocwiki_type"|<<a_api subproject="server" text="Eliom_registration_sigs.S_with_create" | module Eliom_registration_sigs.S_with_create >>>><<span class="odocwiki_type"| \\  with type page = unit\\   and type options = unit\\   and type return = Eliom_service.non_ocaml\\   and type result = browser_content kind>>>><<div class="odocwiki_info"|~Similar to <<span class="odocwiki_inlinecode"|~Actions>> with <<span class="odocwiki_inlinecode"|`~No~Reload>> option~.
>>
<<pre class="ocsforge_color odocwiki_code" id="TYPEredirection"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_type"|'_>> <<span class="odocwiki_name"|redirection>> <<span class="ocsforge_color_delimiter"|~=>> <<span class="odocwiki_variants"|<<span class="odocwiki_variant"|<<span class="odocwiki_variant_constr"|<<span class="ocsforge_color_keyword"| ~|>> <<span class="ocsforge_color_uid"|Redirection>> <<span class="ocsforge_color_keyword"|of>> <<span class="odocwiki_type"|\\    <<span class="ocsforge_color_delimiter"| ( >>unit, unit, <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|get>>, 'b, 'c, 'd, 'e,\\     [ `WithoutSuffix ], unit, unit, 'a<<span class="ocsforge_color_delimiter"| ) >>\\    <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>>>>>>>>>><<div class="odocwiki_info"|~Auxiliarry type to hide non~-interesting type parameters
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="Redirection" | module Eliom_registration.Redirection >> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Eliom_registration.Redirection >><<span class="ocsforge_color_keyword"|end>>>><<div class="odocwiki_info"|~Eliom service registration for services that returns a
    redirections towards another service~.
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="String_redirection" | module Eliom_registration.String_redirection >> <<span class="ocsforge_color_delimiter"|~:>> \\  <<span class="odocwiki_type"|<<a_api subproject="server" text="Eliom_registration_sigs.S_with_create" | module Eliom_registration_sigs.S_with_create >>>><<span class="odocwiki_type"| \\  with type page = <<span class="ocsforge_color_uid"|Eliom_lib.Url>>.uri\\   and type options =\\    [ `MovedPermanently\\    | `Found\\    | `SeeOther\\    | `NotNodifed\\    | `UseProxy\\    | `TemporaryRedirect ]\\   and type return = Eliom_service.non_ocaml\\   and type result = browser_content kind>>>><<div class="odocwiki_info"|~Eliom service registration for services that returns a
    redirections towards a string~-~U~R~L~.
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="File" | module Eliom_registration.File >> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Eliom_registration.File >><<span class="ocsforge_color_keyword"|end>>>><<div class="odocwiki_info"|~Eliom service registration for services that returns file
    contents~.
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="File_ct" | module Eliom_registration.File_ct >> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Eliom_registration.File_ct >><<span class="ocsforge_color_keyword"|end>>>><<div class="odocwiki_info"|~Same as file but makes possible to specify the content type for
    each file~.
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="Ocaml" | module Eliom_registration.Ocaml >> <<span class="ocsforge_color_delimiter"|~:>> \\  <<span class="odocwiki_type"|<<a_api subproject="server" text="Eliom_registration_sigs.S_poly_with_create_with_send" | module Eliom_registration_sigs.S_poly_with_create_with_send >>>><<span class="odocwiki_type"| \\  with type 'a page = 'a\\   and type options = unit\\   and type 'a return = 'a Eliom_service.ocaml\\   and type 'a result = 'a ocaml_content kind>>>><<div class="odocwiki_info"|~Eliom service registration for services that send marshalled ~O~Caml
    values~.
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="Any" | module Eliom_registration.Any >> <<span class="ocsforge_color_delimiter"|~:>> \\  <<span class="odocwiki_type"|<<a_api subproject="server" text="Eliom_registration_sigs.S_poly_with_create_with_send" | module Eliom_registration_sigs.S_poly_with_create_with_send >>>><<span class="odocwiki_type"| \\  with type 'a page = 'a kind\\   and type options = unit\\   and type 'a return = Eliom_service.non_ocaml\\   and type 'a result = 'a kind>>>><<div class="odocwiki_info"|~Eliom service registration for services that choose dynamically
    what they want to send~.
>>
<<pre id="VALappl_self_redirect" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|appl~_self~_redirect>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_delimiter"| ( >>'page <<span class="ocsforge_color_delimiter"| -> >> [< `Appl of 'a | `Browser ] <<a_api subproject="server" text="kind" | type Eliom_registration.kind >> <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  'page <<span class="ocsforge_color_delimiter"| -> >>\\  'appl <<a_api subproject="server" text="application_content" | type Eliom_registration.application_content >> <<a_api subproject="server" text="kind" | type Eliom_registration.kind >>\\  <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>>>><<div class="odocwiki_info"|~The function <<span class="odocwiki_inlinecode"|appl~_self~_redirect send page>> is an helper function
    required for defining <<a_api subproject="server" | module Eliom_registration.Any >> service usable inside an ~Eliom
    application ~(<<a_api subproject="server" | module Eliom_registration.App >>~)~. ~It allows casting an ~Eliom senders that do
    not returns <<a_api subproject="server" | type Eliom_registration.application_content >> ~(like <<span class="odocwiki_inlinecode"|~File~.send>>~,
    <<span class="odocwiki_inlinecode"|~String~.send>>~, ~.~.~.~) into a senders returns
    <<a_api subproject="server" | type Eliom_registration.application_content >>~.


    ~When the service is called from an ~Eliom application~, this is
    implemented with half~-redirection ~(a redirection that leaves the
    application~)~. ~Hence~, the service may be called two times in a row
    and you should not use this function for services that use ~P~O~S~T
    parameters~.
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="String" | module Eliom_registration.String >> <<span class="ocsforge_color_delimiter"|~:>> \\  <<span class="odocwiki_type"|<<a_api subproject="server" text="Eliom_registration_sigs.S_with_create" | module Eliom_registration_sigs.S_with_create >>>><<span class="odocwiki_type"| \\  with type page = string * string\\   and type options = int\\   and type return = Eliom_service.non_ocaml\\   and type result = unknown_content kind>>>><<div class="odocwiki_info"|~Eliom service registration for services that returns "byte"~-string
    contents~.
>>


==@@id="2_Customizingregistration"@@~Customizing registration==

<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="Customize" | module Eliom_registration.Customize >> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_sig_block"|<<span class="ocsforge_color_keyword"|functor>> <<span class="ocsforge_color_delimiter"|(>>R <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api subproject="server" text="Eliom_registration_sigs.S_with_create" | module Eliom_registration_sigs.S_with_create >>>><<span class="ocsforge_color_delimiter"|)>> <<span class="ocsforge_color_delimiter"|-~>>> \\  <<span class="odocwiki_sig_block"|<<span class="ocsforge_color_keyword"|functor>> <<span class="ocsforge_color_delimiter"|(>>T <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<span class="odocwiki_sig_block"|<<span class="ocsforge_color odocwiki_code" id="TYPEpage"|      <<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|page>>>><<span id="VALtranslate" class="ocsforge_color odocwiki_code"|      <<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|translate>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_lid"|page>> <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_uid"|R>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|page>> <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>>>>>><<span class="ocsforge_color_keyword"|end>><<span class="ocsforge_color_delimiter"|)>> <<span class="ocsforge_color_delimiter"|-~>>> \\  \\  <<span class="odocwiki_type"|<<a_api subproject="server" text="Eliom_registration_sigs.S_with_create" | module Eliom_registration_sigs.S_with_create >>>><<span class="odocwiki_type"| \\  with type options = R.options\\   and type return = R.return\\   and type page = T.page\\   and type result = R.result>>>>>>>><<div class="odocwiki_info"|~The <<span class="odocwiki_inlinecode"|~Customize>> functor allows specialization of service
    registration functions by customizing the page type~.
>>


==@@id="2_Usingyourownerrorpages"@@~Using your own error pages==

<<pre id="VALset_exn_handler" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|set~_exn~_handler>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_delimiter"| ( >>exn <<span class="ocsforge_color_delimiter"| -> >>\\   <<a_api subproject="server" text="browser_content" | type Eliom_registration.browser_content >> <<a_api subproject="server" text="kind" | type Eliom_registration.kind >> <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  unit>>>><<div class="odocwiki_info"|~The <<span class="odocwiki_inlinecode"|set~_exn~_handler handler>> allows redefinition of error pages~:
    <<span class="odocwiki_inlinecode"|~4~0~4>> or any exception during page generation~.


    ~Note that you should not catch every exception here since some
    ~Eliom mechanisms are done using exceptions~, like redirections~.  ~Do
    not catch exception defined in ~Eliom except
    <<a_api subproject="server" | exception Eliom_common.Eliom_404 >>~, <<a_api subproject="server" | exception Eliom_common.Eliom_Wrong_parameter >>
    <<a_api subproject="server" | exception Eliom_common.Eliom_Typing_Error >>~.


    //~Warning~: ~This functions must be called when the site
    information is available~, that is~, either during a request or
    during the initialisation phase of the site~.  ~Otherwise~, it will
    raise the exception
    <<a_api subproject="server" | exception Eliom_common.Eliom_site_information_not_available >>~.  ~If you are
    using static linking~, you must delay the call to this function
    until the configuration file is read~, using
    <<a_api subproject="server" | val Eliom_service.register_eliom_module >>~. ~Otherwise you will also
    get this exception~.//
>>


==@@id="2_Unsafecastofcontents"@@~Unsafe cast of contents==

<<pre id="VALcast_unknown_content_kind" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|cast~_unknown~_content~_kind>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<a_api subproject="server" text="unknown_content" | type Eliom_registration.unknown_content >> <<a_api subproject="server" text="kind" | type Eliom_registration.kind >> <<span class="ocsforge_color_delimiter"| -> >>\\  'a <<a_api subproject="server" text="kind" | type Eliom_registration.kind >>>>>><<div class="odocwiki_info"|~If you know that the content you generated using <<span class="odocwiki_inlinecode"|~Text~.send>> or
    <<span class="odocwiki_inlinecode"|~Streamlist~.send>> is the same as some other kind~, you can cast it
    with <<span class="odocwiki_inlinecode"|cast~_unknown~_content~_kind>> for use with <<span class="odocwiki_inlinecode"|~Any>> module~.
>>
<<pre id="VALcast_http_result" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|cast~_http~_result>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_uid"|Ocsigen_response>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >> 'a <<a_api subproject="server" text="kind" | type Eliom_registration.kind >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|cast~_http~_result>> should only be used to register new output
    modules
>>
